

module Main
import DDC.Core.Exp
import DDC.Core.Codec.SExp.Pretty
import DDC.Core.Codec.SExp.Lexer
import DDC.Core.Codec.SExp.Lexer.Token
import DDC.Core.Codec.SExp.Parser
import System.IO.Console
import Data.Function
where

data Annot where
        Annot   : Annot

data Frag where
        FTyNat  : Frag

pretty_Annot: Pretty Annot
 =  Pretty $ \_
 -> "()"

pretty_Frag: Pretty Frag
 = Pretty $ \ff
 -> case ff of
        FTyNat  -> "ty_Nat"

main ()
 = do   exp     = XAbs  (MExp (Bind  (Name "x")) (XAtom (AFrag FTyNat)))
                        (XVar (Bound (Name "x") 0))

        -- ISSUE #439: Post type check does not find unresolved metavariables.
        -- The result of 'ppr exp' has a free metavariable ?21 for the prim type,
        -- and due to this the elaborator fails.
        writel $ ppr {pretty_Exp {pretty_Annot} {pretty_Frag}} exp
--        writel $ ppr exp

        toks    = lexText "(abs (exp (atom (frag ty_Nat))) (var (bound (name \"x\") (nat \"0\"))))"
        writel $ show toks

