
module System.Posix.Stdlib
export {
        exit;
        readNat;
}
import Data.Numeric.Nat
import Data.Text


import foreign abstract type
 Process : Effect

import foreign c value
 exit    : Nat#      -> S Process Void#
 atoi    : Nat#      -> Nat#

import foreign c value
 ddcVectorGuts : {@r: Region} -> Vector# r Word8 -> Nat#

where


-- | Read a natural number from a text string.
--   We assume that it's well formed.
readNat (text: Text): Maybe Nat
 = case text of
        TextVec vec
           ->    Just (atoi (ddcVectorGuts vec))

        _  -> private r with {Alloc r}
              in Just (atoi (ddcVectorGuts (vectorOfText [r] text)))
