
module Data.Numeric.Bool
export { not; and; or; xor; }
where

type Bool = Bool#


-- | Boolean NOT.
not (x: Bool): Bool
 = if x then False
        else True


-- | Boolean AND.
and (x y: Bool): Bool
 = if x then y
        else False


-- | Boolean OR.
or (x y: Bool): Bool
 = if x then True
        else y


-- | Boolean XOR
xor (x y: Bool): Bool
 = if x then (if y then False else True)
        else (if y then True  else False)



